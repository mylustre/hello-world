qqand126  pmo..123

https://www.yiibai.com/git/

git status

git add 
git commit -m (不加-m会进入类似vim编辑界面编辑交换文件，输入i进入insert模式，ESC，输入：再wq可退出编辑）


查看用户名：$ git config user.name

查看邮箱：    $ git config user.email

修改用户名：$ git config --global user.name "cyx"

修改邮箱：    $ git config --global user.email "328978553@qq.com"


****************
1.  mk dir   mylustre
2.  cd mylustre
3. gitbash  ->git init
4.  ssh-keygen 创建密钥对，将公钥放到github账号sshkey中
5.ssh -Tv git@github.com   确认能ssh连接。
6.git clone git@github.com:mylustre/hello-world.git   （进入github  repo  clone按钮选择ssh方式）
7.下载成功，cd hello-word   (在mylustre   git remote -v  是没有对应的远程仓库的)     git remote -v  可以看到已经添加了远程仓库
8.git config -l 查看远程origin与本地master仓库对应  所以此时可以git pull
9.修改文件 git status看到追踪情况。
10.add   commit
11.git push （都按默认执行）进入github 发现已经正常push，后续如果继续修改可以继续push
12丢弃工作区的文件修改：git checkout -- filename
13删除文件:
git rm file git commit -m “remove file”（文件被删除）
14  查看日志  git log
15.  git fetch  origin git-study
16  从远程仓库获取数据：

     git fetch origin git-study--- 只是获取远程仓库的数据至 .git 目录，并未merge本地
     git merge origin/git-study --- 把获取的远程仓库的数据手工merge至当前分支
    git pull origin git-study---- 获取远程仓库的数据，并自动merge至当前的分支，相当于以上两步
合并两个不同的项目：
--allow-unrelated-histories
把本地仓库的内容推送到远程库上：

git push (-u) demo git-study

17    　　git diff　
             比较工作区与暂存区
　　　　　　git diff 不加参数即默认比较工作区与暂存区
　　　   比较暂存区与最新本地版本库（本地库中最近一次commit的内容）
　　　　　　git diff --cached  [<path>...] 
　　　　比较工作区与最新本地版本库
　　　　　　git diff HEAD [<path>...]  如果HEAD指向的是master分支，那么HEAD还可以换成master
18 注：从远程分支 checkout 出来的本地分支，称为跟踪分支(tracking branch)。跟踪分支是一种和远程分支有直接联系的本地分支。在跟踪分支里输入git push，Git 会自行推断应该向哪个服务器的哪个分支推送数据。反过来，在这些分支里运行git pull 会获取所有远程索引，并把它们的数据都合并到本地分支中来。git config -l 可以看到本地分支和远程分支的跟踪关系   
在克隆仓库时，Git 通常会自动创建一个名为 master 的分支来跟踪 origin/master。这正是git push 和 git pull 一开始就能正常工作的原因。当然，你可以随心所欲地设定为其它跟踪分支，比如origin 上除了 master 之外的其它分支。